<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- Controller에서 ModelAndView 인자로 뷰이름이 반환되면 InternalResourceViewResolver의 
		프로퍼티 prefix 속성에 /multi 폴더에서 ModelAndView 인자로 넘어온 뷰이름에 해당하는 JSP를 선택해 DispatcherServlet으로 
		보냄 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/multi/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- SimpleUrlHandlerMapping 클래스를 이용해 /url/index.do로 요청시 simpleUrlController를 
		호출하도록 매핑함 -->
	<bean id="urlMapping"
		class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="mappings">
			<props>
				<prop key="/multi/*.do">userController</prop>
			</props>
		</property>
	</bean>

	<bean id="userController"
		class="kr.co.ezenac.multiaction.UserController">
		<property name="methodNameResolver">
			<ref local="userMethodNameResolver"/>
		</property>
	</bean>

	<!-- PropertiesMethodNameResolver를 이용해 /multi/login.do로 요청하면
		 UserController의 login 메서드를 호출함 -->
	<bean id="userMethodNameResolver"
		class="org.springframework.web.servlet.mvc.multiaction.PropertiesMethodNameResolver" >
		<property name="mappings">
			<props>
				<prop key="/multi/login.do">login</prop>
				<prop key="/multi/memberInfo.do">memberInfo</prop>
			</props>
		</property>	
	</bean>
</beans>
